# Copyright (C) 2020 QUECTEL Technologies Limited and/or its affiliates("QUECTEL").
# All rights reserved.
#

configure_file (
    "${ql_app_dir}/ql_app_feature_config.h.in"
    "${out_inc_dir}/ql_app_feature_config.h"
)

if (QL_APP_PACK_FILE)
if (QL_CCSDK_BUILD)
set(CONFIG_PACKAGE_FILE_APPIMG_JSON_PATH ${QL_APP_PACK_FILE_JSON_PATH})
else()
set(CONFIG_PACKAGE_FILE_APPIMG_JSON_PATH $ENV{prepack_json_path})
endif()
endif()

if(CONFIG_APPIMG_LOAD_FLASH)
    set(target ${QL_APP_BUILD_VER})
    add_appimg_flash_ql_example(${target} ql_init.c)

	target_link_libraries(${target} PRIVATE ql_app_nw ql_app_peripheral ql_app_osi ql_app_dev ql_app_sim ql_app_power)
    if(QL_APP_FEATURE_FTP)
	    target_link_libraries(${target} PRIVATE ql_app_ftp)
	endif()
    if(QL_APP_FEATURE_HTTP)
	    target_link_libraries(${target} PRIVATE ql_app_http)
	endif()
    if(QL_APP_FEATURE_MMS)
	    target_link_libraries(${target} PRIVATE ql_app_mms)
	endif()
    if(QL_APP_FEATURE_MQTT)
	    target_link_libraries(${target} PRIVATE ql_app_mqtt)
	endif()
    if(QL_APP_FEATURE_SSL)
	    target_link_libraries(${target} PRIVATE ql_app_ssl)	
	endif()
    if(QL_APP_FEATURE_PING)
	    target_link_libraries(${target} PRIVATE ql_app_ping)	
	endif()
    if(QL_APP_FEATURE_NTP)
        target_link_libraries(${target} PRIVATE ql_app_ntp)	
	endif()
    if(QL_APP_FEATURE_LBS)
	    target_link_libraries(${target} PRIVATE ql_app_lbs)	
	endif()

    if(QL_APP_FEATURE_CTSREG)
	    target_link_libraries(${target} PRIVATE ql_app_ctsreg)	
	endif()

    if(QL_APP_FEATURE_SOCKET)
	    target_link_libraries(${target} PRIVATE ql_app_socket)	
	endif()

    if(QL_APP_FEATURE_AUDIO)
	    target_link_libraries(${target} PRIVATE ql_app_audio)
		if(QL_APP_FEATURE_AUDIO_TTS)

		endif()
	endif()
	
    if(QL_APP_FEATURE_WIFISCAN)
	    target_link_libraries(${target} PRIVATE ql_app_wifi_scan)
	endif()
    if(QL_APP_FEATURE_BT)
	    target_link_libraries(${target} PRIVATE ql_app_bt)
	endif()
    if(QL_APP_FEATURE_GNSS)
	    target_link_libraries(${target} PRIVATE ql_app_gnss)
	endif()

    if(QL_APP_FEATURE_LCD)
	    target_link_libraries(${target} PRIVATE ql_app_lcd)
	    if(QL_APP_FEATURE_LVGL)
        target_link_libraries(${target} PRIVATE ql_app_lvgl)
        endif()
	endif()
    if(QL_APP_FEATURE_CAMERA)
	    target_link_libraries(${target} PRIVATE ql_app_camera)
	endif()
    if(QL_APP_FEATURE_FILE)
	    target_link_libraries(${target} PRIVATE ql_app_file)
	endif()
	if(QL_APP_FEATURE_SMS)
	    target_link_libraries(${target} PRIVATE ql_app_sms)
	endif()
	if(QL_APP_FEATURE_VOICE_CALL)
	    target_link_libraries(${target} PRIVATE ql_app_voice_call)
	endif()
	if(QL_APP_FEATURE_VOLTE)
	    target_link_libraries(${target} PRIVATE ql_app_volte)
	endif()
    if(QL_APP_FEATURE_SPI)
	    target_link_libraries(${target} PRIVATE ql_app_spi)
	endif()

    if(QL_APP_FEATURE_SPI_FLASH)
	    target_link_libraries(${target} PRIVATE ql_app_spi_flash)
	endif()
	if(QL_APP_FEATURE_DECODER)
		add_library(ql_decoder_api STATIC IMPORTED)
		set_target_properties(ql_decoder_api PROPERTIES IMPORTED_LOCATION ${SOURCE_TOP_DIR}/components/newlib/armca5/libql_api_decoder.a)
	    target_link_libraries(${target} PRIVATE ql_app_decoder ql_decoder_api ${libm_file_name})
	endif()
	
	if(QL_APP_FEATURE_RTC)
	    target_link_libraries(${target} PRIVATE ql_app_rtc)
	endif()

	if(QL_APP_FEATURE_ALI_LINKSDK)
		target_link_libraries(${target} PRIVATE ql_ali_linkSDK)
	endif()

	if(QL_APP_FEATURE_VIRT_AT)
	    target_link_libraries(${target} PRIVATE ql_app_virt_at)
	endif()

	if(QL_APP_FEATURE_HTTP_FOTA)
		target_link_libraries(${target} PRIVATE ql_app_http_fota)
	endif()
	
endif()

relative_glob(srcs *.h *.c)
beautify_c_code(${target} ${srcs})